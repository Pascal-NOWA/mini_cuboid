digraph{
	 graph [splines=ortho]

	subgraph clusterval {
		style = rounded
		bgcolor = grey90
		color = coral
		node [shape = record, color = coral];

		val[label = val, style = filled];
		val_attestation[label = val_attestation, style = filled];
		val_client_defs[label = val_client_defs, style = filled];
		val_framework[label = val_framework, style = filled];
		val_greentea[label = val_greentea, style = filled];
		val_interfaces[label = val_interfaces, style = filled];
		val_internal_trusted_storage[label = val_internal_trusted_storage, style = filled];
		val_protected_storage[label = val_protected_storage, style = filled];
		val_target[label = val_target, style = filled];
		val[label =< <B> val</B>>, style = bold, fillcolor = white, style = filled];


		//------LAYOUT FOR SUBGRAPH------


		rankdir = BT; // Rank Direction Bottom to Top
		nodesep = 0.44; // Node Separation
		ranksep = 0.44; // Rank Separation


		//INHERITANCE//



		//COMPOSITION//


		val -> val_attestation [arrowhead=ediamond];
		val_client_defs -> val_attestation [arrowhead=ediamond];
		val_framework -> val_attestation [arrowhead=ediamond];
		val_target -> val_attestation [arrowhead=ediamond];

		val -> val_client_defs [arrowhead=ediamond];

		val -> val_greentea [arrowhead=ediamond];
		val_interfaces -> val_greentea [arrowhead=ediamond];

		val -> val_interfaces [arrowhead=ediamond];
		val_attestation -> val_interfaces [arrowhead=ediamond];
		val_client_defs -> val_interfaces [arrowhead=ediamond];
		val_greentea -> val_interfaces [arrowhead=ediamond];
		val_internal_trusted_storage -> val_interfaces [arrowhead=ediamond];
		val_protected_storage -> val_interfaces [arrowhead=ediamond];

		val -> val_internal_trusted_storage [arrowhead=ediamond];
		val_client_defs -> val_internal_trusted_storage [arrowhead=ediamond];
		val_framework -> val_internal_trusted_storage [arrowhead=ediamond];
		val_target -> val_internal_trusted_storage [arrowhead=ediamond];

		val -> val_protected_storage [arrowhead=ediamond];
		val_client_defs -> val_protected_storage [arrowhead=ediamond];
		val_framework -> val_protected_storage [arrowhead=ediamond];
		val_target -> val_protected_storage [arrowhead=ediamond];

		val -> val_target [arrowhead=ediamond];
	}//end subgraph val
}//end digraph